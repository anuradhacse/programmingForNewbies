1. String as a array 

str = 'Hello World!'

print (str[:3])
print (str*2)
print (str.index('H'))
print (len(str))

doesn't support all function which worked for lists.(can't change a string)

print (str.extend('H'))
print (str.remove('H'))
print (str.append('H'))
print (str.insert('H'))

cant do - str[2] ='Y' - 'str' object does not support item assignment

3. Python Objects

Immutable objects and mutable objects

     Immutable types: all numeric types (numbers), strings, tuples, range, bytes, frozenset
     Mutable types: lists, dictionaries, bytearray, set, classes, class instances

     Object has following values 
     
     identity - an address in memory - id(a)
     type - type (a) int
     value - 3
     
     Immutable objects (Numbers and string)
     a = 3
     b = 3 
     
     id (a)
     id (b)
    
     a is b -> True
     a and b point to same object.
     
     b = 5
     now b point to different object
  
     a is b -> False
     
     In string you can't change the value after defined the string
     
     str = 'Hello'
     str[0] = 'Y' ---> TypeError: 'str' object does not support item assignment
     
     str = 'Hello'
     str[0] = 'Y' ---> TypeError: 'str' object does not support item assignment
     
     Mutables objects (Lists, Dictionaries)
     
     list = ['1',2]
     print (id(list))

     list.append('abc')
     list[2] ='new'
     print(id)
     
python operators doc - http://doc.hc2.ch/python3/library/operator.html

Boolean operators
===============

==   - equals

!=  -  not equals

>   - greater than
  
<  - less than

>= greater than or equal

<= less than or equal

Translate the following statements into Python Boolean expressions and evaluate them:
(a). The sum of 2 and 2 is less than 4.
(b). The value of 7 // 3 is equal to 1 + 1.
(c). The sum of 3 squared and 4 squared is equal to 25.
(d). The sum of 2, 4, and 6 is greater than 12.
(e). 1, 387 is divisible by 19.
(f). 31 is even.
(g). The lowest price among Rs. 34.99, Rs. 29.95, and Rs.31.50 is less than Rs.30.00.


Logical oprators
=================
and, or, not
a = True
b = False
print(('a and b is',a and b))
print(('a or b is',a or b))
print(('not a is',not a))

2 > 3 and 5>2 -> False 
2 > 3 or 5>2 -> True
not (3 < 4 ) -> False

Control flow
-------------
1. sequential - what we already did
2. selection - if else elif
3. Repetition
4. Subprogram ( functions )

if 
===
if expression:
     statement_1
     statement_2
     ...
     statement_n
     
Exersize 1:

marks = int(input('Enter your marks: '))
if (marks > 50):
     print("You passed the exam")
  
Exersize 2: 
Develop a program which accepts a number (an amount of money to be paid by a customer
in rupees) entered from the keyboard. If the amount is greater than or equal to 1,000 rupees, a 5%
discount is given to the customer. Then display the final amount that the customer has to pay

if else
==========
if expression:
     statement(s)
else:
     statement(s)

exersize 1 -

Enter your marks - ?
75 >= A
65 -74 B
55 -64 C
35 -54 -D
below 35 - F

ex 2 - if below discount price, then show you have no discount

ex 3

A car increases its velocity from u ms-1 to v ms-1 within t seconds. Write a program to
compute and display the acceleration, assuming u, v and t are integers and given as input.
The relationship between a, u, v and t can be given as v = u + at . Therefore, acceleration can be found
by the equation
t
v u
a
âˆ’
= . Note that users can input any values to the program. Therefore to find the
correct acceleration t has to be non-zero and positive. So our program should make sure it only accepts
correct inputs. The following Program-4.4 computes the acceleration given u, v and t


ex 4(Home work) - calculator (+, -, /, * , ** )

1 + 2 -> 3
2 - 3 = -1
4/2 = 1


