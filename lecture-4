1. String as a array 

str = 'Hello World!'

print (str[:3])
print (str*2)
print (str.index('H'))
print (len(str))

doesn't support all function which worked for lists.(can't change a string)

print (str.extend('H'))
print (str.remove('H'))
print (str.append('H'))
print (str.insert('H'))

cant do - str[2] ='Y' - 'str' object does not support item assignment

3. Python Objects

Immutable objects and mutable objects

     Immutable types: all numeric types (numbers), strings, tuples, range, bytes, frozenset
     Mutable types: lists, dictionaries, bytearray, set, classes, class instances

     Object has following values 
     
     identity - an address in memory - id(a)
     type - type (a) int
     value - 3
     
     Immutable objects (Numbers and string)
     a = 3
     b = 3 
     
     id (a)
     id (b)
    
     a is b -> True
     a and b point to same object.
     
     b = 5
     now b point to different object
  
     a is b -> False
     
     In string you can't change the value after defined the string
     
     str = 'Hello'
     str[0] = 'Y' ---> TypeError: 'str' object does not support item assignment
     
     str = 'Hello'
     str[0] = 'Y' ---> TypeError: 'str' object does not support item assignment
     
     Mutables objects (Lists, Dictionaries)
     
     list = ['1',2]
     print (id(list))

     list.append('abc')
     list[2] ='new'
     print(id)
     
python operators doc - http://doc.hc2.ch/python3/library/operator.html

Boolean operators
===============

==   - equals

!=  -  not equals

>   - greater than
  
<  - less than

>= greater than or equal

<= less than or equal

Translate the following statements into Python Boolean expressions and evaluate them:
(a). The sum of 2 and 2 is less than 4.
(b). The value of 7 // 3 is equal to 1 + 1.
(c). The sum of 3 squared and 4 squared is equal to 25.
(d). The sum of 2, 4, and 6 is greater than 12.
(e). 1, 387 is divisible by 19.
(f). 31 is even.
(g). The lowest price among Rs. 34.99, Rs. 29.95, and Rs.31.50 is less than Rs.30.00.


Logical oprators
=================
and, or, not


if else loop
--------------
  
exersizes
=========
https://www.w3resource.com/python-exercises/list/
